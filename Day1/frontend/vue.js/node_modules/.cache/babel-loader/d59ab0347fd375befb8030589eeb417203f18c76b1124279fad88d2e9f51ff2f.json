{"ast":null,"code":"export default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [],\n      loading: true,\n      error: null\n    };\n  },\n  async created() {\n    try {\n      console.log('APIリクエスト開始');\n      const response = await fetch('http://35.76.17.88:3000/api/products');\n      console.log('APIレスポンス:', response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('取得したデータ:', data);\n      this.products = data;\n    } catch (error) {\n      console.error('エラー詳細:', error);\n      this.error = error.message;\n    } finally {\n      this.loading = false;\n    }\n  }\n};","map":{"version":3,"names":["name","data","products","loading","error","created","console","log","response","fetch","ok","Error","status","json","message"],"sources":["/Users/hirookura/Documents/案件/Webアプリ研修/teamC/Day1/frontend/vue.js/src/components/ProductList.vue"],"sourcesContent":["<template>\n  <div class=\"mx-auto px-4 max-w-7xl\">\n    <h2 class=\"text-2xl font-bold my-6\">商品一覧</h2>\n    \n    <!-- デバッグ情報の表示 -->\n    <div class=\"mb-4 p-4 bg-gray-100\">\n      <p>データ取得状態: {{ loading ? '取得中...' : '完了' }}</p>\n      <p>商品数: {{ products.length }}</p>\n      <p v-if=\"error\">エラー: {{ error }}</p>\n    </div>\n\n    <div class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n      <div v-for=\"product in products\" :key=\"product._id.$oid\" \n           class=\"bg-white rounded-lg border shadow-sm hover:shadow-md transition-shadow\">\n        <!-- 商品情報（既存のコード） -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ProductList',\n  data() {\n    return {\n      products: [],\n      loading: true,\n      error: null\n    }\n  },\n  async created() {\n    try {\n      console.log('APIリクエスト開始');\n      const response = await fetch('http://35.76.17.88:3000/api/products');\n      console.log('APIレスポンス:', response);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      console.log('取得したデータ:', data);\n      \n      this.products = data;\n    } catch (error) {\n      console.error('エラー詳細:', error);\n      this.error = error.message;\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n</script>"],"mappings":"AAqBA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpEH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;MAElC,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMX,IAAG,GAAI,MAAMO,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,IAAI,CAAC;MAE7B,IAAI,CAACC,QAAO,GAAID,IAAI;IACtB,EAAE,OAAOG,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACU,OAAO;IAC5B,UAAU;MACR,IAAI,CAACX,OAAM,GAAI,KAAK;IACtB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}