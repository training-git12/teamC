{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = {\n  class: \"header-controls\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"admin-controls\"\n};\nconst _hoisted_4 = {\n  class: \"product-grid\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"product-info\"\n};\nconst _hoisted_7 = {\n  class: \"price\"\n};\nconst _hoisted_8 = {\n  class: \"description\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  viewBox: \"0 0 24 24\",\n  fill: \"#ff4757\",\n  class: \"heart-icon\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  viewBox: \"0 0 24 24\",\n  fill: \"#888\",\n  class: \"heart-icon\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = [\"src\"];\nexport function render(_ctx, _cache) {\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" ヘッダー部分に管理者モードのトグルを追加 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"商品一覧\", -1 /* HOISTED */)), _createVNode(_component_el_switch, {\n    modelValue: _ctx.isAdminMode,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.isAdminMode = $event),\n    class: \"admin-toggle\",\n    \"active-text\": \"管理者モード\",\n    \"inactive-text\": \"通常モード\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" 管理者モード時のコントロールパネル \"), _ctx.isAdminMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n    type: \"danger\",\n    onClick: _ctx.clearAllLikes\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 全てのいいねを削除 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商品グリッド \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: product._id,\n      class: \"product-card\",\n      shadow: \"hover\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 商品画像 \"), _createElementVNode(\"img\", {\n        src: product.images[0],\n        alt: \"Product Image\",\n        class: \"product-image\"\n      }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h2\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"価格: \" + _toDisplayString(product.price) + \"円\", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(product.description), 1 /* TEXT */), _createCommentVNode(\" 管理者モード時のいいね管理ボタン \"), _ctx.isAdminMode && _ctx.likedProducts[product._id] ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"danger\",\n        size: \"small\",\n        onClick: $event => _ctx.removeLike(product)\n      }, {\n        default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\" いいねを削除 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createCommentVNode(\" 通常モードのいいねボタン \"), _createVNode(_component_el_button, {\n        class: _normalizeClass([\"like-button\", {\n          'is-liked': _ctx.likedProducts[product._id]\n        }]),\n        onClick: $event => _ctx.likeProduct(product._id),\n        text: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, {\n          size: 20\n        }, {\n          default: _withCtx(() => [_ctx.likedProducts[product._id] ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_9, [...(_cache[5] || (_cache[5] = [_createElementVNode(\"path\", {\n            d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n          }, null, -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_10, [...(_cache[6] || (_cache[6] = [_createElementVNode(\"path\", {\n            d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n          }, null, -1 /* HOISTED */)]))]))]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"])], 64 /* STABLE_FRAGMENT */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $event => _ctx.showDetails(product)\n      }, {\n        default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"詳細\")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 商品詳細モーダル \"), _createVNode(_component_el_dialog, {\n    modelValue: _ctx.dialogVisible,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.dialogVisible = $event),\n    title: \"商品詳細\",\n    width: \"50%\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _ctx.closeModal\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"閉じる\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_ctx.selectedProduct ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n      src: _ctx.selectedProduct.images[0],\n      alt: \"Product Image\",\n      class: \"modal-image\"\n    }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"価格:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.selectedProduct.price) + \"円\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"説明:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.selectedProduct.description), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"strong\", null, \"ブランド:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.selectedProduct.brand), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"strong\", null, \"仕様:\", -1 /* HOISTED */)), _createTextVNode(\" 素材 - \" + _toDisplayString(_ctx.selectedProduct.specifications.material) + \", 長さ - \" + _toDisplayString(_ctx.selectedProduct.specifications.length), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","viewBox","fill","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_switch","modelValue","_ctx","isAdminMode","_cache","$event","_hoisted_3","_component_el_button","type","onClick","clearAllLikes","default","_withCtx","_createTextVNode","_","_hoisted_4","_Fragment","_renderList","products","product","_createBlock","_component_el_card","_id","shadow","src","images","alt","_hoisted_5","_hoisted_6","_toDisplayString","name","_hoisted_7","price","_hoisted_8","description","likedProducts","size","removeLike","_normalizeClass","likeProduct","text","_component_el_icon","_hoisted_9","d","_hoisted_10","showDetails","_component_el_dialog","dialogVisible","title","width","footer","closeModal","selectedProduct","_hoisted_11","_hoisted_12","brand","specifications","material","length"],"sources":["/Users/hirookura/Documents/案件/Webアプリ研修/teamC/Day1/frontend/vue.js/src/components/ProductList.vue"],"sourcesContent":["//=============================================================================\n// src/components/ProductList.vue\n//\n// 商品データを表示し、詳細情報や「いいね」機能などを提供するコンポーネントです\n//=============================================================================\n\n//-----------------------------------------------------------------------------\n//テンプレートセレクション\n// テンプレートセクションは、Vue コンポーネントの 見た目（UI）を定義します\n// HTMLに似た記法を使用し、動的データをバインドしてUIをレンダリングします\n//\n// 動的データのバインディング:\n//   {{}}（マスタッシュ記法）を使用して、スクリプトセクションで定義したデータや計算プロパティを表示できます\n// ディレクティブ:\n//   Vue.js 独自の属性（ディレクティブ）を利用して、HTML要素に動的な振る舞いを追加します\n//   例: v-if、v-for、v-bind、v-on。\n//-----------------------------------------------------------------------------\n<template>\n <div class=\"product-list\">\n   <!-- ヘッダー部分に管理者モードのトグルを追加 -->\n   <div class=\"header-controls\">\n     <h1>商品一覧</h1>\n     <el-switch\n       v-model=\"isAdminMode\"\n       class=\"admin-toggle\"\n       active-text=\"管理者モード\"\n       inactive-text=\"通常モード\"\n     />\n   </div>\n\n   <!-- 管理者モード時のコントロールパネル -->\n   <div v-if=\"isAdminMode\" class=\"admin-controls\">\n     <el-button type=\"danger\" @click=\"clearAllLikes\">\n       全てのいいねを削除\n     </el-button>\n   </div>\n\n   <!-- 商品グリッド -->\n   <div class=\"product-grid\">\n     <el-card\n       v-for=\"product in products\" \n       :key=\"product._id\"\n       class=\"product-card\"\n       shadow=\"hover\"  \n     >\n       <!-- 商品画像 -->\n       <img :src=\"product.images[0]\" alt=\"Product Image\" class=\"product-image\" />\n       \n       <div class=\"product-info\">\n         <h2>{{ product.name }}</h2>\n         <p class=\"price\">価格: {{ product.price }}円</p>\n         <p class=\"description\">{{ product.description }}</p>\n         \n         <!-- 管理者モード時のいいね管理ボタン -->\n         <template v-if=\"isAdminMode && likedProducts[product._id]\">\n           <el-button\n             type=\"danger\"\n             size=\"small\"\n             @click=\"removeLike(product)\"\n           >\n             いいねを削除\n           </el-button>\n         </template>\n         \n         <!-- 通常モードのいいねボタン -->\n         <template v-else>\n           <el-button\n             class=\"like-button\"\n             :class=\"{ 'is-liked': likedProducts[product._id] }\"\n             @click=\"likeProduct(product._id)\"\n             text\n           >\n             <el-icon :size=\"20\">\n               <svg v-if=\"likedProducts[product._id]\" viewBox=\"0 0 24 24\" fill=\"#ff4757\" class=\"heart-icon\">\n                 <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n               </svg>\n               <svg v-else viewBox=\"0 0 24 24\" fill=\"#888\" class=\"heart-icon\">\n                 <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n               </svg>\n             </el-icon>\n           </el-button>\n         </template>\n         \n         <el-button type=\"primary\" @click=\"showDetails(product)\">詳細</el-button>\n       </div>\n     </el-card>\n   </div>\n\n   <!-- 商品詳細モーダル -->\n   <el-dialog v-model=\"dialogVisible\" title=\"商品詳細\" width=\"50%\">\n     <div v-if=\"selectedProduct\">\n       <img :src=\"selectedProduct.images[0]\" alt=\"Product Image\" class=\"modal-image\" />\n       <p><strong>価格:</strong> {{ selectedProduct.price }}円</p>\n       <p><strong>説明:</strong> {{ selectedProduct.description }}</p>\n       <p><strong>ブランド:</strong> {{ selectedProduct.brand }}</p>\n       <p>\n         <strong>仕様:</strong> 素材 - {{ selectedProduct.specifications.material }},\n         長さ - {{ selectedProduct.specifications.length }}\n       </p>\n     </div>\n     <template #footer>\n       <el-button @click=\"closeModal\">閉じる</el-button>\n     </template>\n   </el-dialog>\n </div>\n</template>\n\n//-----------------------------------------------------------------------------\n//スクリプトセレクション\n// スクリプトセクションは、コンポーネントの ロジック や データ管理 を記述します\n// 主に JavaScript を使い、Vue コンポーネントの機能を実装します\n//\n// オブジェクト形式で定義\n// ・data    : コンポーネントの状態を保持\n// ・methods : ユーザーアクションやカスタムロジックを実装\n// ・computed: データの派生値（キャッシュされる）\n// ・watch   : 特定のデータの変化を監視し、対応する処理を実行\n// ・ライフサイクルフック: コンポーネントの初期化や破棄時に実行するコードを記述（例: mounted）\n//-----------------------------------------------------------------------------\n<script>\n//axios: HTTPリクエストライブラリで、APIを通じてバックエンドと通信します\nimport axios from \"axios\";\n\nexport default {\n  //データプロパティ\n  data() {\n    return {\n      products: [],\n      selectedProduct: null,\n      likedProducts: {},\n      currentUserId: \"671e0166eed5dc448afe6911\",\n      dialogVisible: false,\n      isAdminMode: false,  // 管理者モードのフラグを追加\n    };\n  },\n  \n  //コンポーネントが初期化された際に呼び出されるライフサイクルフック\n  async mounted() {\n    await this.fetchProducts();      // 商品リストをAPIから取得\n    await this.fetchLikedProducts(); // ユーザーが「いいね」した商品の状態を取得\n  },\n  \n  methods: {\n    //いいね済み商品の取得\n    // ユーザーが「いいね」した商品IDを取得し、likedProducts オブジェクトに記録します\n    async fetchLikedProducts() {\n      try {\n<<<<<<< Updated upstream\n        // APIリクエスト\n        const response = await axios.get(\"http://18.178.128.74:3000/api/products\");\n        // const response = await axios.get(\"http://localhost:3000/api/products\");     // ローカルで立ち上げる場合\n        // 商品リストをデータに設定\n        this.products = response.data;\n=======\n        this.likedProducts = {};\n        const response = await axios.get(\n          `http://18.178.128.74:3000/api/liked-products/${this.currentUserId}`\n        );\n        response.data.forEach((productId) => {\n          this.likedProducts[productId] = true;\n        });\n>>>>>>> Stashed changes\n      } catch (error) {\n        console.error(\"Error fetching liked products:\", error);\n      }\n    },\n    \n    //「いいね」状態を更新\n    // 商品詳細モーダルで現在表示されている商品の「いいね」数を最新の状態に更新します\n    updateSelectedProductLikeStatus() {\n      if (this.selectedProduct) {\n        this.selectedProduct.likes =\n          this.products.find(\n            (product) => product._id === this.selectedProduct._id\n          )?.likes || 0;\n      }\n    },\n    \n    //商品リストの取得\n    // API (/api/products) を呼び出して商品データを取得し、products 配列に保存します\n    async fetchProducts() {\n      try {\n        const response = await axios.get(\n          \"http://18.178.128.74:3000/api/products\"\n        );\n        console.log(\"取得した商品データ:\", response.data); // デバッグ用\n        this.products = response.data;\n      } catch (error) {\n        console.error(\"Error fetching products:\", error); // エラーログ\n      }\n    },\n    \n    //商品詳細の表示\n    // ユーザーが商品をクリックした際に、選択した商品データをselectedProductに設定し、\n    // モーダルを表示します\n    showDetails(product) {\n      this.selectedProduct = product;  // 選択した商品を格納\n      this.dialogVisible = true;       // モーダルを表示\n    },\n    \n    //商品詳細モーダルを閉じる\n    // モーダルを閉じる際に、selectedProductをリセットして非表示にします\n    closeModal() {\n      this.selectedProduct = null;  // 選択状態をリセット\n      this.dialogVisible = false;   // モーダルを非表示\n    },\n    \n    //商品を「いいね」する\n    // ユーザーが「いいね」をクリックすると、APIにリクエストを送信し、「いいね」状態を更新します\n    // 成功した場合、モーダル内の「いいね」数を更新し、ローカル状態にも反映します\n    async likeProduct() {\n      const productId = this.selectedProduct._id;\n\n      if (this.likedProducts[productId]) {\n        console.log(\"Product is already liked:\", productId);\n        return;\n      }\n\n      try {\n        await axios.post(\"http://18.178.128.74:3000/api/like\", {\n          userId: this.currentUserId,\n          productId,\n        });\n\n        const updatedProduct = await axios.get(\n          `http://18.178.128.74:3000/api/products/${productId}`\n        );\n        // 更新された「いいね」数\n        this.selectedProduct.likes = updatedProduct.data.likes;\n        // 状態を更新\n        this.likedProducts[productId] = true;\n      } catch (error) {\n        console.error(\"Error liking product:\", error);\n      }\n    },\n\n    // いいねを削除（個別）\n    async removeLike(product) {\n      try {\n        const response = await axios.delete('http://18.178.128.74:3000/api/admin/likes', {\n          data: { productId: product._id }\n        });\n\n        if (response.status === 200) {\n          // ローカルの状態を更新\n          this.likedProducts[product._id] = false;\n          await this.fetchLikedProducts(); // いいね状態を再取得\n          ElMessage.success('いいねを削除しました');\n        }\n      } catch (error) {\n        console.error('Error removing like:', error);\n        ElMessage.error('いいねの削除に失敗しました');\n      }\n    },\n\n    // 全てのいいねを削除\n    async clearAllLikes() {\n      try {\n        const confirmed = await ElMessageBox.confirm(\n          'すべてのいいねを削除してもよろしいですか？',\n          '確認',\n          {\n            confirmButtonText: '削除',\n            cancelButtonText: 'キャンセル',\n            type: 'warning'\n          }\n        );\n\n        if (confirmed) {\n          const response = await axios.delete('http://18.178.128.74:3000/api/admin/likes/all');\n\n          if (response.status === 200) {\n            await this.fetchLikedProducts(); // いいね状態を再取得\n            ElMessage.success('すべてのいいねを削除しました');\n          }\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('Error clearing all likes:', error);\n          ElMessage.error('いいねの一括削除に失敗しました');\n        }\n      }\n    },\n  },\n};\n</script>\n\n\n//-----------------------------------------------------------------------------\n//スタイルセレクション\n// スタイルセクションは、コンポーネントのデザインやレイアウトを定義します。CSSやSCSSなどを記述します\n//\n// コンポーネントスコープ\n// ・スタイルをそのコンポーネントに限定することができます（scoped 属性）\n// プリプロセッサ\n// ・SCSS、LESS、Stylus などの CSS 拡張言語を利用可能\n//-----------------------------------------------------------------------------\n<style>\n/* 商品リスト全体のスタイル */\n.product-list {\n  max-width: 1200px;   /* コンテンツの最大幅を指定 */\n  margin: auto;        /* コンテンツを中央寄せ */\n  text-align: center;  /* テキストを中央揃え */\n}\n\n/* 商品カードのグリッドレイアウト */\n.product-grid {\n  display: grid;  /* グリッドレイアウトを使用 */\n  gap: 20px;      /* 各カード間のスペース */\n  /* カラムを自動調整 */\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); \n}\n\n/* 商品カードのデザイン */\n.product-card {\n  padding: 20px;                    /* カード内の余白を設定 */\n  border: 1px solid #eee;           /* カードの枠線の色を薄いグレーに設定 */\n  display: flex;                    /* フレックスボックスを使用 */\n  flex-direction: column;           /* 縦方向に配置 */\n  justify-content: space-between;   /* 上下の要素を均等配置 */\n  height: 100%;                     /* 高さを揃える */\n}\n\n/* 商品情報のレイアウト */\n.product-info {\n  display: flex;                    /* フレックスボックスを使用 */\n  flex-direction: column;           /* 情報を縦方向に配置 */\n  flex-grow: 1;                     /* スペースを確保 */\n  justify-content: space-between;   /* 上下の要素間を均等に配置 */\n}\n\n/* 商品画像のスタイル */\n.product-image {\n  width: 100%;         /* 横幅をカード全体に合わせる */\n  height: auto;        /* 縦横比を維持しながら画像をリサイズ */\n  margin-bottom: 10px; /* 下に余白を追加 */\n}\n\n/* 価格のテキストデザイン */\n.price {\n  font-weight: bold;  /* テキストを太字に設定 */\n  color: #555;        /* ダークグレーの色を使用 */\n}\n\n/* 商品説明テキスト */\n.description {\n  margin: 10px 0;   /* 上下に余白を追加 */\n  flex-grow: 1;     /* ボタンを下部に配置するための余白確保 */\n}\n\n/* モーダル内の画像スタイル */\n.modal-image {\n  width: 50%;            /* 画面幅に応じたサイズ調整 */\n  height: auto;          /* 縦横比を維持してリサイズ */\n  margin-bottom: 20px;   /* 下に余白を追加 */\n}\n\n/* いいねアイコンのスタイル */\n.like-section {\n  display: flex;          /* アイコンとテキストを横並びに配置 */\n  align-items: center;    /* 要素を垂直方向の中央に揃える */\n  gap: 10px;              /* アイコンとテキストの間に余白を設定 */\n}\n</style>\n\n"],"mappings":";;EAkBMA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAiB;;EApB/BC,GAAA;EA+B2BD,KAAK,EAAC;;;EAOzBA,KAAK,EAAC;AAAc;mBAtC5B;;EAgDYA,KAAK,EAAC;AAAc;;EAEpBA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAa;;EAnD/BC,GAAA;EAyEsDC,OAAO,EAAC,WAAW;EAACC,IAAI,EAAC,SAAS;EAACH,KAAK,EAAC;;;EAzE/FC,GAAA;EA4E2BC,OAAO,EAAC,WAAW;EAACC,IAAI,EAAC,MAAM;EAACH,KAAK,EAAC;;;EA5EjEC,GAAA;AAAA;oBAAA;;;;;;;uBAkBCG,mBAAA,CAsFM,OAtFNC,UAsFM,GArFJC,mBAAA,0BAA6B,EAC7BC,mBAAA,CAQM,OARNC,UAQM,G,0BAPJD,mBAAA,CAAa,YAAT,MAAI,sBACRE,YAAA,CAKEC,oBAAA;IA3BPC,UAAA,EAuBgBC,IAAA,CAAAC,WAAW;IAvB3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuBgBH,IAAA,CAAAC,WAAW,GAAAE,MAAA;IACpBf,KAAK,EAAC,cAAc;IACpB,aAAW,EAAC,QAAQ;IACpB,eAAa,EAAC;6CAIlBM,mBAAA,uBAA0B,EACfM,IAAA,CAAAC,WAAW,I,cAAtBT,mBAAA,CAIM,OAJNY,UAIM,GAHJP,YAAA,CAEYQ,oBAAA;IAFDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAEP,IAAA,CAAAQ;;IAhCtCC,OAAA,EAAAC,QAAA,CAgCqD,MAEhDR,MAAA,QAAAA,MAAA,OAlCLS,gBAAA,CAgCqD,aAEhD,E;IAlCLC,CAAA;sCAAAlB,mBAAA,gBAqCGA,mBAAA,YAAe,EACfC,mBAAA,CAgDM,OAhDNkB,UAgDM,I,kBA/CJrB,mBAAA,CA8CUsB,SAAA,QArFfC,WAAA,CAwCyBf,IAAA,CAAAgB,QAAQ,EAAnBC,OAAO;yBADhBC,YAAA,CA8CUC,kBAAA;MA5CP9B,GAAG,EAAE4B,OAAO,CAACG,GAAG;MACjBhC,KAAK,EAAC,cAAc;MACpBiC,MAAM,EAAC;;MA3CdZ,OAAA,EAAAC,QAAA,CA6CO,MAAa,CAAbhB,mBAAA,UAAa,EACbC,mBAAA,CAA0E;QAApE2B,GAAG,EAAEL,OAAO,CAACM,MAAM;QAAKC,GAAG,EAAC,eAAe;QAACpC,KAAK,EAAC;8BA9C/DqC,UAAA,GAgDO9B,mBAAA,CAoCM,OApCN+B,UAoCM,GAnCJ/B,mBAAA,CAA2B,YAAAgC,gBAAA,CAApBV,OAAO,CAACW,IAAI,kBACnBjC,mBAAA,CAA6C,KAA7CkC,UAA6C,EAA5B,MAAI,GAAAF,gBAAA,CAAGV,OAAO,CAACa,KAAK,IAAG,GAAC,iBACzCnC,mBAAA,CAAoD,KAApDoC,UAAoD,EAAAJ,gBAAA,CAA1BV,OAAO,CAACe,WAAW,kBAE7CtC,mBAAA,sBAAyB,EACTM,IAAA,CAAAC,WAAW,IAAID,IAAA,CAAAiC,aAAa,CAAChB,OAAO,CAACG,GAAG,K,cACtDF,YAAA,CAMYb,oBAAA;QA7DvBhB,GAAA;QAwDaiB,IAAI,EAAC,QAAQ;QACb4B,IAAI,EAAC,OAAO;QACX3B,OAAK,EAAAJ,MAAA,IAAEH,IAAA,CAAAmC,UAAU,CAAClB,OAAO;;QA1DvCR,OAAA,EAAAC,QAAA,CA2DY,MAED,KAAAR,MAAA,QAAAA,MAAA,OA7DXS,gBAAA,CA2DY,UAED,E;QA7DXC,CAAA;yEAiESpB,mBAAA,CAgBWsB,SAAA;QAjFpBzB,GAAA;MAAA,IAgESK,mBAAA,kBAAqB,EAEnBG,YAAA,CAcYQ,oBAAA;QAbVjB,KAAK,EAnElBgD,eAAA,EAmEmB,aAAa;UAAA,YACGpC,IAAA,CAAAiC,aAAa,CAAChB,OAAO,CAACG,GAAG;QAAA;QAC9Cb,OAAK,EAAAJ,MAAA,IAAEH,IAAA,CAAAqC,WAAW,CAACpB,OAAO,CAACG,GAAG;QAC/BkB,IAAI,EAAJ;;QAtEb7B,OAAA,EAAAC,QAAA,CAwEa,MAOU,CAPVb,YAAA,CAOU0C,kBAAA;UAPAL,IAAI,EAAE;QAAE;UAxE/BzB,OAAA,EAAAC,QAAA,CAyEe,MAEM,CAFKV,IAAA,CAAAiC,aAAa,CAAChB,OAAO,CAACG,GAAG,K,cAApC5B,mBAAA,CAEM,OAFNgD,UAEM,OAAAtC,MAAA,QAAAA,MAAA,OADJP,mBAAA,CAA0L;YAApL8C,CAAC,EAAC;UAAgL,2B,uBAE1LjD,mBAAA,CAEM,OAFNkD,WAEM,OAAAxC,MAAA,QAAAA,MAAA,OADJP,mBAAA,CAA0L;YAApL8C,CAAC,EAAC;UAAgL,2B;UA7EzM7B,CAAA;;QAAAA,CAAA;8FAmFSf,YAAA,CAAsEQ,oBAAA;QAA3DC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAAJ,MAAA,IAAEH,IAAA,CAAA2C,WAAW,CAAC1B,OAAO;;QAnF9DR,OAAA,EAAAC,QAAA,CAmFiE,MAAE,KAAAR,MAAA,QAAAA,MAAA,OAnFnES,gBAAA,CAmFiE,IAAE,E;QAnFnEC,CAAA;;MAAAA,CAAA;;oCAwFGlB,mBAAA,cAAiB,EACjBG,YAAA,CAcY+C,oBAAA;IAvGf7C,UAAA,EAyFuBC,IAAA,CAAA6C,aAAa;IAzFpC,uBAAA3C,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyFuBH,IAAA,CAAA6C,aAAa,GAAA1C,MAAA;IAAE2C,KAAK,EAAC,MAAM;IAACC,KAAK,EAAC;;IAWzCC,MAAM,EAAAtC,QAAA,CACf,MAA8C,CAA9Cb,YAAA,CAA8CQ,oBAAA;MAAlCE,OAAK,EAAEP,IAAA,CAAAiD;IAAU;MArGpCxC,OAAA,EAAAC,QAAA,CAqGsC,MAAGR,MAAA,SAAAA,MAAA,QArGzCS,gBAAA,CAqGsC,KAAG,E;MArGzCC,CAAA;;IAAAH,OAAA,EAAAC,QAAA,CA0FK,MASM,CATKV,IAAA,CAAAkD,eAAe,I,cAA1B1D,mBAAA,CASM,OAnGX2D,WAAA,GA2FOxD,mBAAA,CAAgF;MAA1E2B,GAAG,EAAEtB,IAAA,CAAAkD,eAAe,CAAC3B,MAAM;MAAKC,GAAG,EAAC,eAAe;MAACpC,KAAK,EAAC;4BA3FvEgE,WAAA,GA4FOzD,mBAAA,CAAwD,Y,0BAArDA,mBAAA,CAAoB,gBAAZ,KAAG,sBA5FrBgB,gBAAA,CA4F8B,GAAC,GAAAgB,gBAAA,CAAG3B,IAAA,CAAAkD,eAAe,CAACpB,KAAK,IAAG,GAAC,gB,GACpDnC,mBAAA,CAA6D,Y,0BAA1DA,mBAAA,CAAoB,gBAAZ,KAAG,sBA7FrBgB,gBAAA,CA6F8B,GAAC,GAAAgB,gBAAA,CAAG3B,IAAA,CAAAkD,eAAe,CAAClB,WAAW,iB,GACtDrC,mBAAA,CAAyD,Y,4BAAtDA,mBAAA,CAAsB,gBAAd,OAAK,sBA9FvBgB,gBAAA,CA8FgC,GAAC,GAAAgB,gBAAA,CAAG3B,IAAA,CAAAkD,eAAe,CAACG,KAAK,iB,GAClD1D,mBAAA,CAGI,Y,4BAFFA,mBAAA,CAAoB,gBAAZ,KAAG,sBAhGpBgB,gBAAA,CAgG6B,QAAM,GAAAgB,gBAAA,CAAG3B,IAAA,CAAAkD,eAAe,CAACI,cAAc,CAACC,QAAQ,IAAG,SAClE,GAAA5B,gBAAA,CAAG3B,IAAA,CAAAkD,eAAe,CAACI,cAAc,CAACE,MAAM,iB,OAjGtD9D,mBAAA,e;IAAAkB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}