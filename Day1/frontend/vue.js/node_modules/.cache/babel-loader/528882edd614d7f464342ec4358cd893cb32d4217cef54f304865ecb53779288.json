{"ast":null,"code":"//=============================================================================\n// src/router/index.js\n//\n// 役割\n//  Vue.jsアプリケーションにおいてルーティング（ページ遷移）を管理するためのコードです\n//  Vue Routerを使用して、URLパスに基づき異なるコンポーネント（ページ）を表示する仕組みを構築します\n//\n// - ルートの定義\n//   アプリケーション内の異なるページをURLパスに紐づけます。\n//   たとえば、productlistにアクセスするとProductList.vueが表示され、adminにアクセスすると\n//   AdminPanel.vueが表示されるように設定します\n//\n// - ルートの動作設定\n//   各ルートに特化した機能（beforeEnterガード）を追加し、ページ遷移時に特定のロジックを実行します\n//   リダイレクトを設定し、指定された条件で別のルートに移動します\n//\n// - ナビゲーションガードの設定\n//   アプリケーション全体で共通のナビゲーションロジックを追加します\n//   これにより、ページ遷移の前後に特定の処理（ログ記録など）を行います\n//\n// - Vue Routerのインスタンス作成\n//   定義されたルートと履歴モードの設定に基づいて、アプリケーション全体でルーターを利用できるようにします\n//\n// - エクスポート\n//   作成したルーターインスタンスをエクスポートし、アプリケーションのエントリーポイント（main.js）で\n//   登録して使用します\n// \n// 目的\n// - ページ遷移を管理\n//   URLごとに適切なページを表示し、シングルページアプリケーション（SPA）の特性を活かしてスムーズな\n//   ユーザー体験を提供します\n// \n// - 開発効率の向上\n//   各ページをコンポーネントとして分離し、ルーティングを通じて動的に切り替えることで、\n//   再利用性の高いコードを実現します。\n// \n// - 動的なルーティング制御\n//   ナビゲーションガードやリダイレクト機能を活用することで、ページ遷移の制御や\n//   セキュリティ要件を柔軟に管理します。\n// \n// - プリケーションの統一的なナビゲーション管理\n//   Vue Routerを統合することで、ルーティングに関するコードを集中管理し、可読性や保守性を向上させます\n//=============================================================================\n\n// Vue Routerのインポート\nimport { createRouter, createWebHistory } from 'vue-router';\n\n// 商品一覧コンポーネント\nimport ProductList from '../components/ProductList.vue';\n\n// ルートの定義\n// ルート管理: アプリケーション内で異なるページやコンポーネントを URL に応じて切り替える\nconst routes = [{\n  path: '/productlist',\n  // 商品一覧ページのパス\n  name: 'ProductList',\n  // ルート名（任意）\n  component: ProductList // このルートに対応するコンポーネント\n}, {\n  //リダイレクト: 特定の条件下で適切なページに案内する\n  path: '/',\n  // ルートパスへのアクセス\n  redirect: '/productlist' // リダイレクト先（商品一覧ページ）\n}];\n\n// Vue Router のインスタンス作成\nconst router = createRouter({\n  // 履歴モードを使用\n  history: createWebHistory(),\n  // 定義されたルートを登録\n  routes\n});\n\n// 初期化時の確認用ログ\nconsole.log('Vue Router initialized');\n\n// ルーターをエクスポート\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","ProductList","routes","path","name","component","redirect","router","history","console","log"],"sources":["/Users/hirookura/Documents/案件/Webアプリ研修/teamC/Day1/frontend/vue.js/src/router/index.js"],"sourcesContent":["//=============================================================================\r\n// src/router/index.js\r\n//\r\n// 役割\r\n//  Vue.jsアプリケーションにおいてルーティング（ページ遷移）を管理するためのコードです\r\n//  Vue Routerを使用して、URLパスに基づき異なるコンポーネント（ページ）を表示する仕組みを構築します\r\n//\r\n// - ルートの定義\r\n//   アプリケーション内の異なるページをURLパスに紐づけます。\r\n//   たとえば、productlistにアクセスするとProductList.vueが表示され、adminにアクセスすると\r\n//   AdminPanel.vueが表示されるように設定します\r\n//\r\n// - ルートの動作設定\r\n//   各ルートに特化した機能（beforeEnterガード）を追加し、ページ遷移時に特定のロジックを実行します\r\n//   リダイレクトを設定し、指定された条件で別のルートに移動します\r\n//\r\n// - ナビゲーションガードの設定\r\n//   アプリケーション全体で共通のナビゲーションロジックを追加します\r\n//   これにより、ページ遷移の前後に特定の処理（ログ記録など）を行います\r\n//\r\n// - Vue Routerのインスタンス作成\r\n//   定義されたルートと履歴モードの設定に基づいて、アプリケーション全体でルーターを利用できるようにします\r\n//\r\n// - エクスポート\r\n//   作成したルーターインスタンスをエクスポートし、アプリケーションのエントリーポイント（main.js）で\r\n//   登録して使用します\r\n// \r\n// 目的\r\n// - ページ遷移を管理\r\n//   URLごとに適切なページを表示し、シングルページアプリケーション（SPA）の特性を活かしてスムーズな\r\n//   ユーザー体験を提供します\r\n// \r\n// - 開発効率の向上\r\n//   各ページをコンポーネントとして分離し、ルーティングを通じて動的に切り替えることで、\r\n//   再利用性の高いコードを実現します。\r\n// \r\n// - 動的なルーティング制御\r\n//   ナビゲーションガードやリダイレクト機能を活用することで、ページ遷移の制御や\r\n//   セキュリティ要件を柔軟に管理します。\r\n// \r\n// - プリケーションの統一的なナビゲーション管理\r\n//   Vue Routerを統合することで、ルーティングに関するコードを集中管理し、可読性や保守性を向上させます\r\n//=============================================================================\r\n\r\n// Vue Routerのインポート\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\n\r\n// 商品一覧コンポーネント\r\nimport ProductList from '../components/ProductList.vue';\r\n\r\n// ルートの定義\r\n// ルート管理: アプリケーション内で異なるページやコンポーネントを URL に応じて切り替える\r\nconst routes = [\r\n  {\r\n    path: '/productlist',   // 商品一覧ページのパス\r\n    name: 'ProductList',    // ルート名（任意）\r\n    component: ProductList, // このルートに対応するコンポーネント\r\n  },\r\n  {\r\n    //リダイレクト: 特定の条件下で適切なページに案内する\r\n    path: '/',                // ルートパスへのアクセス\r\n    redirect: '/productlist', // リダイレクト先（商品一覧ページ）\r\n  },\r\n];\r\n\r\n// Vue Router のインスタンス作成\r\nconst router = createRouter({\r\n  // 履歴モードを使用\r\n  history: createWebHistory(),\r\n  // 定義されたルートを登録\r\n  routes,\r\n});\r\n\r\n// 初期化時の確認用ログ\r\nconsole.log('Vue Router initialized');\r\n\r\n// ルーターをエクスポート\r\nexport default router;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;;AAE3D;AACA,OAAOC,WAAW,MAAM,+BAA+B;;AAEvD;AACA;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,cAAc;EAAI;EACxBC,IAAI,EAAE,aAAa;EAAK;EACxBC,SAAS,EAAEJ,WAAW,CAAE;AAC1B,CAAC,EACD;EACE;EACAE,IAAI,EAAE,GAAG;EAAiB;EAC1BG,QAAQ,EAAE,cAAc,CAAE;AAC5B,CAAC,CACF;;AAED;AACA,MAAMC,MAAM,GAAGR,YAAY,CAAC;EAC1B;EACAS,OAAO,EAAER,gBAAgB,CAAC,CAAC;EAC3B;EACAE;AACF,CAAC,CAAC;;AAEF;AACAO,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;;AAErC;AACA,eAAeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}