{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"商品一覧\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"読み込み中...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.id\n    }, [_createCommentVNode(\" 商品情報の表示 \"), _createElementVNode(\"div\", null, _toDisplayString(product.name), 1 /* TEXT */), _createCommentVNode(\" 他の商品情報 \")]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","loading","_hoisted_1","_hoisted_2","_Fragment","_renderList","products","product","id","_createCommentVNode","_toDisplayString","name"],"sources":["/Users/hirookura/Documents/案件/Webアプリ研修/teamC/Day1/frontend/vue.js/src/components/ProductList.vue"],"sourcesContent":["<!-- components/ProductList.vue -->\n<template>\n  <div>\n    <h1>商品一覧</h1>\n    <div v-if=\"loading\">読み込み中...</div>\n    <div v-else>\n      <div v-for=\"product in products\" :key=\"product.id\">\n        <!-- 商品情報の表示 -->\n        <div>{{ product.name }}</div>\n        <!-- 他の商品情報 -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      products: [],\n      loading: true\n    }\n  },\n  async created() {\n    try {\n      // バックエンドAPIを呼び出す\n      const response = await fetch('http://localhost:3000/api/products')\n      const data = await response.json()\n      this.products = data\n    } catch (error) {\n      console.error('商品の取得に失敗しました:', error)\n    } finally {\n      this.loading = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.product-list {\n  padding: 20px;\n}\n\n.products-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  padding: 20px;\n}\n\n.product-card {\n  border: 1px solid #ddd;\n  padding: 15px;\n  border-radius: 8px;\n}\n\nbutton {\n  background-color: #4CAF50;\n  color: white;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n</style>"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBAEEC,mBAAA,CAUM,c,0BATJC,mBAAA,CAAa,YAAT,MAAI,sBACGC,KAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAkC,OAJtCI,UAAA,EAIwB,UAAQ,M,cAC5BJ,mBAAA,CAMM,OAXVK,UAAA,I,kBAMML,mBAAA,CAIMM,SAAA,QAVZC,WAAA,CAM6BL,KAAA,CAAAM,QAAQ,EAAnBC,OAAO;yBAAnBT,mBAAA,CAIM;MAJ4BD,GAAG,EAAEU,OAAO,CAACC;QAC7CC,mBAAA,aAAgB,EAChBV,mBAAA,CAA6B,aAAAW,gBAAA,CAArBH,OAAO,CAACI,IAAI,kBACpBF,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}