{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = {\n  class: \"product-grid\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"product-info\"\n};\nconst _hoisted_5 = {\n  class: \"price\"\n};\nconst _hoisted_6 = {\n  class: \"description\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  viewBox: \"0 0 24 24\",\n  fill: \"#ff4757\",\n  class: \"heart-icon\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  viewBox: \"0 0 24 24\",\n  fill: \"#888\",\n  class: \"heart-icon\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"商品一覧\", -1 /* HOISTED */)), _createCommentVNode(\" 商品をカード形式で表示 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 商品ごとにループ(v-for)してカードを生成 \"), _createCommentVNode(\" Vue.jsではループで生成される要素に一意のキー(key)を設定する必要があります \"), _createCommentVNode(\" ホバー時に影を表示 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: product._id,\n      class: \"product-card\",\n      shadow: \"hover\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 商品画像 \"), _createElementVNode(\"img\", {\n        src: product.images[0],\n        alt: \"Product Image\",\n        class: \"product-image\"\n      }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 商品名 \"), _createElementVNode(\"h2\", null, _toDisplayString(product.name), 1 /* TEXT */), _createCommentVNode(\" 価格 \"), _createElementVNode(\"p\", _hoisted_5, \"価格: \" + _toDisplayString(product.price) + \"円\", 1 /* TEXT */), _createCommentVNode(\" 商品説明 \"), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(product.description), 1 /* TEXT */), _createCommentVNode(\" いいねボタン \"), _createVNode(_component_el_button, {\n        class: _normalizeClass([\"like-button\", {\n          'is-liked': product.isLiked\n        }]),\n        onClick: $event => $options.toggleLike(product),\n        text: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, {\n          size: 20\n        }, {\n          default: _withCtx(() => [product.isLiked ? (_openBlock(), _createElementBlock(\"svg\", _hoisted_7, [...(_cache[1] || (_cache[1] = [_createElementVNode(\"path\", {\n            d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n          }, null, -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_8, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"path\", {\n            d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n          }, null, -1 /* HOISTED */)]))]))]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"]), _createCommentVNode(\" 詳細ボタン（クリックでモーダルを表示） \"), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $event => $options.showDetails(product)\n      }, {\n        default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"詳細\")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 商品詳細モーダル \"), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.dialogVisible = $event),\n    title: \"商品詳細\",\n    width: \"50%\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $options.closeModal\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"閉じる\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [$data.selectedProduct ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createCommentVNode(\" モーダル内の商品画像 \"), _createElementVNode(\"img\", {\n      src: $data.selectedProduct.images[0],\n      alt: \"Product Image\",\n      class: \"modal-image\"\n    }, null, 8 /* PROPS */, _hoisted_10), _createCommentVNode(\" 価格情報 \"), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"価格:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedProduct.price) + \"円\", 1 /* TEXT */)]), _createCommentVNode(\" 商品説明 \"), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"説明:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedProduct.description), 1 /* TEXT */)]), _createCommentVNode(\" ブランド \"), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"ブランド:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedProduct.brand), 1 /* TEXT */)]), _createCommentVNode(\" 商品仕様 \"), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"仕様:\", -1 /* HOISTED */)), _createTextVNode(\" 素材 - \" + _toDisplayString($data.selectedProduct.specifications.material) + \", 長さ - \" + _toDisplayString($data.selectedProduct.specifications.length), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","viewBox","fill","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_Fragment","_renderList","$data","products","product","_createBlock","_component_el_card","_id","shadow","default","_withCtx","src","images","alt","_hoisted_3","_hoisted_4","_toDisplayString","name","_hoisted_5","price","_hoisted_6","description","_createVNode","_component_el_button","_normalizeClass","isLiked","onClick","$event","$options","toggleLike","text","_component_el_icon","size","_hoisted_7","_cache","d","_hoisted_8","_","type","showDetails","_createTextVNode","_component_el_dialog","modelValue","dialogVisible","title","width","footer","closeModal","selectedProduct","_hoisted_9","_hoisted_10","brand","specifications","material","length"],"sources":["/Users/hirookura/Documents/案件/Webアプリ研修/teamC/Day1/frontend/vue.js/src/components/ProductList.vue"],"sourcesContent":["//=============================================================================\n// src/components/ProductList.vue\n//\n// 商品データを表示し、詳細情報や「いいね」機能などを提供するコンポーネントです\n//=============================================================================\n\n//-----------------------------------------------------------------------------\n//テンプレートセレクション\n// テンプレートセクションは、Vue コンポーネントの 見た目（UI）を定義します\n// HTMLに似た記法を使用し、動的データをバインドしてUIをレンダリングします\n//\n// 動的データのバインディング:\n//   {{}}（マスタッシュ記法）を使用して、スクリプトセクションで定義したデータや計算プロパティを表示できます\n// ディレクティブ:\n//   Vue.js 独自の属性（ディレクティブ）を利用して、HTML要素に動的な振る舞いを追加します\n//   例: v-if、v-for、v-bind、v-on。\n//-----------------------------------------------------------------------------\n<template>\n  <div class=\"product-list\">\n    <h1>商品一覧</h1>\n    \n    <!-- 商品をカード形式で表示 -->\n    <div class=\"product-grid\">\n      <!-- 商品ごとにループ(v-for)してカードを生成 -->\n      <!-- Vue.jsではループで生成される要素に一意のキー(key)を設定する必要があります -->\n      <!-- ホバー時に影を表示 -->\n      <el-card\n        v-for=\"product in products\" :key=\"product._id\"\n        class=\"product-card\"\n        shadow=\"hover\"  \n      >\n        <!-- 商品画像 -->\n        <img :src=\"product.images[0]\" alt=\"Product Image\" class=\"product-image\" />\n        \n        <div class=\"product-info\">\n          <!-- 商品名 -->\n          <h2>{{ product.name }}</h2>\n          <!-- 価格 -->\n          <p class=\"price\">価格: {{ product.price }}円</p>\n          <!-- 商品説明 -->\n          <p class=\"description\">{{ product.description }}</p>\n\n          <!-- いいねボタン -->\n          <el-button\n            class=\"like-button\"\n            :class=\"{ 'is-liked': product.isLiked }\"\n            @click=\"toggleLike(product)\"\n            text\n          >\n            <el-icon :size=\"20\">\n              <svg v-if=\"product.isLiked\" viewBox=\"0 0 24 24\" fill=\"#ff4757\" class=\"heart-icon\">\n                <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n              </svg>\n              <svg v-else viewBox=\"0 0 24 24\" fill=\"#888\" class=\"heart-icon\">\n                <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n              </svg>\n            </el-icon>\n          </el-button>\n\n          <!-- 詳細ボタン（クリックでモーダルを表示） -->\n          <el-button type=\"primary\" @click=\"showDetails(product)\">詳細</el-button>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 商品詳細モーダル -->\n    <el-dialog v-model=\"dialogVisible\" title=\"商品詳細\" width=\"50%\">\n      <!-- モーダル内に選択された商品の詳細を表示 -->\n      <div v-if=\"selectedProduct\">\n        <!-- モーダル内の商品画像 -->\n        <img :src=\"selectedProduct.images[0]\" alt=\"Product Image\" class=\"modal-image\" />\n        <!-- 価格情報 -->\n        <p><strong>価格:</strong> {{ selectedProduct.price }}円</p>\n        <!-- 商品説明 -->\n        <p><strong>説明:</strong> {{ selectedProduct.description }}</p>\n        <!-- ブランド -->\n        <p><strong>ブランド:</strong> {{ selectedProduct.brand }}</p>\n        <!-- 商品仕様 -->\n        <p>\n          <strong>仕様:</strong> 素材 - {{ selectedProduct.specifications.material }},\n          長さ - {{ selectedProduct.specifications.length }}\n        </p>\n      </div>\n      <!-- モーダルのフッター（閉じるボタン） -->\n      <template #footer>\n        <el-button @click=\"closeModal\">閉じる</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n//-----------------------------------------------------------------------------\n//スクリプトセレクション\n// スクリプトセクションは、コンポーネントの ロジック や データ管理 を記述します\n// 主に JavaScript を使い、Vue コンポーネントの機能を実装します\n//\n// オブジェクト形式で定義\n// ・data    : コンポーネントの状態を保持\n// ・methods : ユーザーアクションやカスタムロジックを実装\n// ・computed: データの派生値（キャッシュされる）\n// ・watch   : 特定のデータの変化を監視し、対応する処理を実行\n// ・ライフサイクルフック: コンポーネントの初期化や破棄時に実行するコードを記述（例: mounted）\n//-----------------------------------------------------------------------------\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      products: [],          // 商品リストを格納\n      selectedProduct: null, // 選択された商品の情報を格納\n      dialogVisible: false,  // モーダルの表示/非表示を制御\n    };\n  },\n  methods: {\n    // 商品リストをAPIから取得\n    async fetchProducts() {\n      try {\n        // APIリクエスト\n        // const response = await axios.get(\"http://18.178.128.74:3000/api/products\");\n        const response = await axios.get(\"http://localhost:3000/api/products\");     // ローカルで立ち上げる場合\n        // 商品リストをデータに設定\n        this.products = response.data;\n      } catch (error) {\n        // エラー時の処理\n        console.error(error);\n      }\n    },\n    // 商品詳細モーダルを表示\n    showDetails(product) {\n      this.selectedProduct = product; // 選択された商品をセット\n      this.dialogVisible = true;      // モーダルを表示\n    },\n    // モーダルを閉じる\n    closeModal() {\n      this.dialogVisible = false;    // モーダルを非表示\n      this.selectedProduct = null;   // 選択された商品をクリア\n    },\n    // いいね機能の切り替え\n    async toggleLike(product) {\n      try {\n        console.log('Sending like request for product:', product._id); // デバッグログ追加\n        const response = await axios.post(`http://localhost:3000/api/products/${product._id}/like`);\n        console.log('Received response:', response.data); // デバッグログ追加\n        \n        if (response.data.success) {\n            product.likes = response.data.likes;\n            product.isLiked = !product.isLiked;\n        }\n      } catch (error) {\n        console.error('Error details:', error.response || error); // より詳細なエラーログ\n        this.$message({\n          message: 'いいねの更新に失敗しました',\n          type: 'error'\n        });\n      }\n    },\n    // 商品データ取得時にisLikedプロパティを追加\n    async fetchProducts() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/api/products\");\n        // 各商品にisLikedプロパティを追加\n        this.products = response.data.map(product => ({\n          ...product,\n          isLiked: false // 初期状態は「いいねしていない」\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  // コンポーネントのマウント時に商品リストを取得\n  mounted() {\n    this.fetchProducts();\n  },\n};\n</script>\n\n//-----------------------------------------------------------------------------\n//スタイルセレクション\n// スタイルセクションは、コンポーネントのデザインやレイアウトを定義します。CSSやSCSSなどを記述します\n//\n// コンポーネントスコープ\n// ・スタイルをそのコンポーネントに限定することができます（scoped 属性）\n// プリプロセッサ\n// ・SCSS、LESS、Stylus などの CSS 拡張言語を利用可能\n//-----------------------------------------------------------------------------\n<style>\n/* 商品リスト全体のスタイル */\n.product-list {\n  max-width: 1200px;   /* コンテンツの最大幅を指定 */\n  margin: auto;        /* コンテンツを中央寄せ */\n  text-align: center;  /* テキストを中央揃え */\n}\n\n/* 商品カードのグリッドレイアウト */\n.product-grid {\n  display: grid;  /* グリッドレイアウトを使用 */\n  gap: 20px;      /* 各カード間のスペース */\n  /* カラムを自動調整 */\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); \n}\n\n/* 商品カードのデザイン */\n.product-card {\n  padding: 20px;                    /* カード内の余白を設定 */\n  border: 1px solid #eee;           /* カードの枠線の色を薄いグレーに設定 */\n  display: flex;                    /* フレックスボックスを使用 */\n  flex-direction: column;           /* 縦方向に配置 */\n  justify-content: space-between;   /* 上下の要素を均等配置 */\n  height: 100%;                     /* 高さを揃える */\n}\n\n/* 商品情報のレイアウト */\n.product-info {\n  display: flex;                    /* フレックスボックスを使用 */\n  flex-direction: column;           /* 情報を縦方向に配置 */\n  flex-grow: 1;                     /* スペースを確保 */\n  justify-content: space-between;   /* 上下の要素間を均等に配置 */\n}\n\n/* 商品画像のスタイル */\n.product-image {\n  width: 100%;         /* 横幅をカード全体に合わせる */\n  height: auto;        /* 縦横比を維持しながら画像をリサイズ */\n  margin-bottom: 10px; /* 下に余白を追加 */\n}\n\n/* 価格のテキストデザイン */\n.price {\n  font-weight: bold;  /* テキストを太字に設定 */\n  color: #555;        /* ダークグレーの色を使用 */\n}\n\n/* 商品説明テキスト */\n.description {\n  margin: 10px 0;   /* 上下に余白を追加 */\n  flex-grow: 1;     /* ボタンを下部に配置するための余白確保 */\n}\n\n/* モーダル内の画像スタイル */\n.modal-image {\n  width: 50%;            /* 画面幅に応じたサイズ調整 */\n  height: auto;          /* 縦横比を維持してリサイズ */\n  margin-bottom: 20px;   /* 下に余白を追加 */\n}\n\n.like-button {\n  margin: 10px 0;\n}\n\n.like-button .el-button {\n  transition: all 0.3s ease;\n}\n\n.like-button .el-button.is-liked {\n  color: #409EFF;\n}\n\n/* いいねボタンのアイコンのアニメーション */\n.like-button .el-button:active {\n  transform: scale(0.95);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}